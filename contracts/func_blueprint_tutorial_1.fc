#include "imports/stdlib.fc";

(int) load_data () inline {
    slice ds = get_data().begin_parse();
    (int num) = ds~load_uint(32);
    return num;
}

() save_data (int num) impure {
    set_data(begin_cell().store_uint(num, 32).end_cell());
}

() recv_internal(int my_balance, int msg_value, cell in_msg_full, slice in_msg_body) impure {
    if (in_msg_body.slice_empty?()) {
        return ();
    }
    slice sc = in_msg_full.begin_parse();
    int flags = sc~load_uint(4);
    if (flags & 1) {
        return ();
    }
    int num = in_msg_body~load_uint(32);
    (int sum) = load_data();
    sum += num;
    save_data(sum);
}

int get_num() method_id {
    (int num) = load_data();
    return (num);
}